
User.save = -> (params) {
  err, id = redis.getNextId!()
  if(!err) {
    u = User.save!(params | merge {id: id})
    yield u
  } else {
    yield false
  }
}


// implicit vars :D
// yield 
// !
// simple for : for(i of X) :D
// @
// string interp, #{}
// multiline strings
// implicit return

User.save = function (params) {
  var _cb = arguments[arguments.length-1]
  redis.getNextId(function(err, id ) {
    if(!err) {
      User.save(__.merge(params, {id: id}), function(u) {
        _cb(u)
      })
    } else {
      _cb(false)
    }
  })
  return
}

function __last = function(x) {
  return x[x.length-1]
}
